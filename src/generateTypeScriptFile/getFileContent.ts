import { ApiRoute, Page } from "./types";

const getTypeSafePage = ({ path, params }: Page) => {
  if (!params?.length) {
    return `"${path}"`;
  }

  return `{ path: "${path}", ${params
    .map((param) => `${param}: string | string[] | number`)
    .join(",")} }`;
};

const getTypeSafeApiRoute = ({ endpoint, params }: ApiRoute) => {
  if (!params?.length) {
    return `"${endpoint}"`;
  }

  return `{ endpoint: "${endpoint}", ${params
    .map((param) => `${param}: string | string[] | number`)
    .join(",")} }`;
};

type Args = {
  apiRoutes: ApiRoute[];
  pages: Page[];
};

const getFileContent = ({ apiRoutes, pages }: Args) => `
// IMPORTANT! This file is autogenerated by the \`type-safe-next-pages\` 
// package. You should _not_ update these types manually...

declare module "next-type-safe-pages" {
  export type TypeSafePage = ${pages.map(getTypeSafePage).join(" | ")};

  ${
    apiRoutes.length > 0
      ? `export type TypeSafeApiRoute = ${apiRoutes
          .map(getTypeSafeApiRoute)
          .join(" | ")};`
      : ""
  }
}
`;

export default getFileContent;
