import { ApiRoute, Page } from "./types";

const getParam = (param: string) => `${param}: string | string[] | number`;

const getTypeSafeRoute = ({ route, params }: ApiRoute) => {
  if (!params?.length) {
    return `"${route}" | { route: "${route}", query?: Query }`;
  }

  const paramsString = params.map(getParam).join(",");

  return `{ route: "${route}", params: { ${paramsString} }, query?: Query }`;
};

type Args = {
  apiRoutes: ApiRoute[];
  pages: Page[];
};

const getFileContent = ({
  apiRoutes,
  pages,
}: Args) => `// IMPORTANT! This file is autogenerated by the \`type-safe-next-routes\` 
// package. You should _not_ update these types manually...

declare module "next-type-safe-routes" {
  type Query = { [key: string]: string | number };
  export type TypeSafePage = ${pages.map(getTypeSafeRoute).join(" | ")};
  ${
    apiRoutes.length > 0
      ? `export type TypeSafeApiRoute = ${apiRoutes
          .map(getTypeSafeRoute)
          .join(" | ")};`
      : ""
  }
  export const getPathname = (typeSafeUrl: TypeSafePage | TypeSafeApiRoute) => string;
  export const getRoute = (typeSafeUrl: TypeSafePage | TypeSafeApiRoute) => string;
}
`;

export default getFileContent;
